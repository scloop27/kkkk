import { type Admin, type UpsertAdmin, type Lodge, type UpsertLodge, type RoomType, type UpsertRoomType, type Room, type UpsertRoom, type Guest, type UpsertGuest, type Booking, type UpsertBooking, type Payment, type UpsertPayment, type Bill, type UpsertBill } from "../shared/schema";
export interface IStorage {
    getAdmin(id: string): Promise<Admin | undefined>;
    getAdminByUsername(username: string): Promise<Admin | undefined>;
    createAdmin(admin: UpsertAdmin): Promise<Admin>;
    updateAdmin(id: string, admin: Partial<UpsertAdmin>): Promise<Admin>;
    getLodge(id: string): Promise<Lodge | undefined>;
    getFirstLodge(): Promise<Lodge | undefined>;
    createLodge(lodge: UpsertLodge): Promise<Lodge>;
    updateLodge(id: string, lodge: Partial<UpsertLodge>): Promise<Lodge>;
    getRoomTypes(lodgeId: string): Promise<RoomType[]>;
    getRoomType(id: string): Promise<RoomType | undefined>;
    createRoomType(roomType: UpsertRoomType): Promise<RoomType>;
    updateRoomType(id: string, roomType: Partial<UpsertRoomType>): Promise<RoomType>;
    deleteRoomType(id: string): Promise<void>;
    getRooms(lodgeId: string): Promise<Room[]>;
    getRoom(id: string): Promise<Room | undefined>;
    getRoomsByType(roomTypeId: string): Promise<Room[]>;
    getAvailableRooms(lodgeId: string, checkInDate: string, checkOutDate: string): Promise<Room[]>;
    createRoom(room: UpsertRoom): Promise<Room>;
    updateRoom(id: string, room: Partial<UpsertRoom>): Promise<Room>;
    deleteRoom(id: string): Promise<void>;
    getGuests(): Promise<Guest[]>;
    getGuest(id: string): Promise<Guest | undefined>;
    getGuestByPhone(phone: string): Promise<Guest | undefined>;
    getGuestByAadhar(aadharNumber: string): Promise<Guest | undefined>;
    createGuest(guest: UpsertGuest): Promise<Guest>;
    updateGuest(id: string, guest: Partial<UpsertGuest>): Promise<Guest>;
    getBookings(): Promise<Booking[]>;
    getBooking(id: string): Promise<Booking | undefined>;
    getBookingsByGuest(guestId: string): Promise<Booking[]>;
    getBookingsByRoom(roomId: string): Promise<Booking[]>;
    getActiveBookings(): Promise<Booking[]>;
    createBooking(booking: UpsertBooking): Promise<Booking>;
    updateBooking(id: string, booking: Partial<UpsertBooking>): Promise<Booking>;
    getPayments(): Promise<Payment[]>;
    getPayment(id: string): Promise<Payment | undefined>;
    getPaymentsByBooking(bookingId: string): Promise<Payment[]>;
    createPayment(payment: UpsertPayment): Promise<Payment>;
    updatePayment(id: string, payment: Partial<UpsertPayment>): Promise<Payment>;
    getBills(): Promise<Bill[]>;
    getBill(id: string): Promise<Bill | undefined>;
    getBillsByBooking(bookingId: string): Promise<Bill[]>;
    createBill(bill: UpsertBill): Promise<Bill>;
    updateBill(id: string, bill: Partial<UpsertBill>): Promise<Bill>;
}
export declare class DatabaseStorage implements IStorage {
    getAdmin(id: string): Promise<Admin | undefined>;
    getAdminByUsername(username: string): Promise<Admin | undefined>;
    createAdmin(admin: UpsertAdmin): Promise<Admin>;
    updateAdmin(id: string, admin: Partial<UpsertAdmin>): Promise<Admin>;
    getLodge(id: string): Promise<Lodge | undefined>;
    getFirstLodge(): Promise<Lodge | undefined>;
    createLodge(lodge: UpsertLodge): Promise<Lodge>;
    updateLodge(id: string, lodge: Partial<UpsertLodge>): Promise<Lodge>;
    getRoomTypes(lodgeId: string): Promise<RoomType[]>;
    getRoomType(id: string): Promise<RoomType | undefined>;
    createRoomType(roomType: UpsertRoomType): Promise<RoomType>;
    updateRoomType(id: string, roomType: Partial<UpsertRoomType>): Promise<RoomType>;
    deleteRoomType(id: string): Promise<void>;
    getRooms(lodgeId: string): Promise<Room[]>;
    getRoom(id: string): Promise<Room | undefined>;
    getRoomsByType(roomTypeId: string): Promise<Room[]>;
    getAvailableRooms(lodgeId: string, checkInDate: string, checkOutDate: string): Promise<Room[]>;
    createRoom(room: UpsertRoom): Promise<Room>;
    updateRoom(id: string, room: Partial<UpsertRoom>): Promise<Room>;
    deleteRoom(id: string): Promise<void>;
    getGuests(): Promise<Guest[]>;
    getGuest(id: string): Promise<Guest | undefined>;
    getGuestByPhone(phone: string): Promise<Guest | undefined>;
    getGuestByAadhar(aadharNumber: string): Promise<Guest | undefined>;
    createGuest(guest: UpsertGuest): Promise<Guest>;
    updateGuest(id: string, guest: Partial<UpsertGuest>): Promise<Guest>;
    getBookings(): Promise<Booking[]>;
    getBooking(id: string): Promise<Booking | undefined>;
    getBookingsByGuest(guestId: string): Promise<Booking[]>;
    getBookingsByRoom(roomId: string): Promise<Booking[]>;
    getActiveBookings(): Promise<Booking[]>;
    createBooking(booking: UpsertBooking): Promise<Booking>;
    updateBooking(id: string, booking: Partial<UpsertBooking>): Promise<Booking>;
    getPayments(): Promise<Payment[]>;
    getPayment(id: string): Promise<Payment | undefined>;
    getPaymentsByBooking(bookingId: string): Promise<Payment[]>;
    createPayment(payment: UpsertPayment): Promise<Payment>;
    updatePayment(id: string, payment: Partial<UpsertPayment>): Promise<Payment>;
    getBills(): Promise<Bill[]>;
    getBill(id: string): Promise<Bill | undefined>;
    getBillsByBooking(bookingId: string): Promise<Bill[]>;
    createBill(bill: UpsertBill): Promise<Bill>;
    updateBill(id: string, bill: Partial<UpsertBill>): Promise<Bill>;
}
export declare const storage: DatabaseStorage;
